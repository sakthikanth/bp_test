'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createRenderFn;

var _aBigTriangle = require('a-big-triangle');

var _aBigTriangle2 = _interopRequireDefault(_aBigTriangle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function render(multipass, renderScreen) {
  var passes = multipass.passes;
  var scene = multipass.scene;
  var resolution = multipass.resolution;
  var fbos = multipass.fbos;
  var gl = multipass.gl;

  resolution[0] = scene.renderer.canvas.width;
  resolution[1] = scene.renderer.canvas.height;
  fbos[0].shape = resolution;
  fbos[1].shape = resolution;
  var flipflop = 0; // Flip between 0 and 1 with bitwise operations

  var pass = undefined,
      input = undefined,
      output = undefined;

  for (var i = 0; i < passes.length; i++) {
    input = fbos[flipflop];
    output = fbos[flipflop ^ 1];
    flipflop = flipflop ^ 1;

    // Decide whether or not to render to screen
    // TODO - this will probably get more complicated
    if (i + 1 < passes.length) {
      output.bind();
    } else {
      gl.bindFramebuffer(gl.FRAMEBUFFER, null);
    }

    passes[0].render(input, renderScreen);
  }
  gl.bindFramebuffer(gl.FRAMEBUFFER, null);
}

function createRenderFn(multipass) {
  var renderScreen = _aBigTriangle2.default.bind(null, multipass.gl);
  return render.bind(multipass, renderScreen);
}