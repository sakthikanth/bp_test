'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createmultipass;

var _usePass = require('./use-pass');

var _usePass2 = _interopRequireDefault(_usePass);

var _render = require('./render');

var _render2 = _interopRequireDefault(_render);

var _destroy = require('./destroy');

var _destroy2 = _interopRequireDefault(_destroy);

var _glFbo = require('gl-fbo');

var _glFbo2 = _interopRequireDefault(_glFbo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function multipass(scene, camera) {
  this.scene = scene;
  this.camera = camera;
  this.passes = [];
  this.gl = scene.renderer.gl;
  this.resolution = [scene.renderer.canvas.width, scene.renderer.canvas.height];
  this.fbos = [(0, _glFbo2.default)(gl, resolution), (0, _glFbo2.default)(gl, resolution)];

  this.use = _usePass2.default.bind(null, this);
  this.render = _render2.default.bind(null, this);
  this.destroy = _destroy2.default.bind(null, this);
}

function createmultipass(scene, camera) {
  if (!scene || !scene.renderer) {
    throw new Error('Post processor must be provided a scene with an attached renderer.');
  }
  return new multipass(scene, camera);
}