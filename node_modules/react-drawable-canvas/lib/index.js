"use strict";var React=require("react"),ReactDOM=require("react-dom"),PropTypes=React.PropTypes,DrawableCanvas=React.createClass({displayName:"DrawableCanvas",propTypes:{brushColor:PropTypes.string,lineWidth:PropTypes.number,canvasStyle:PropTypes.shape({backgroundColor:PropTypes.string,cursor:PropTypes.string}),clear:PropTypes.bool},getDefaultProps:function(){return{brushColor:"#000000",lineWidth:4,canvasStyle:{backgroundColor:"#FFFFFF",cursor:"pointer"},clear:!1}},getInitialState:function(){return{canvas:null,context:null,drawing:!1,lastX:0,lastY:0,history:[]}},componentDidMount:function(){var t=ReactDOM.findDOMNode(this);t.style.width="100%",t.style.height="100%",t.width=t.offsetWidth,t.height=t.offsetHeight;var e=t.getContext("2d");this.setState({canvas:t,context:e})},componentWillReceiveProps:function(t){t.clear&&this.resetCanvas()},handleOnMouseDown:function(t){var e=this.state.canvas.getBoundingClientRect();this.state.context.beginPath(),this.isMobile()?this.setState({lastX:t.targetTouches[0].pageX-e.left,lastY:t.targetTouches[0].pageY-e.top}):this.setState({lastX:t.clientX-e.left,lastY:t.clientY-e.top}),this.setState({drawing:!0})},handleOnMouseMove:function(t){if(this.state.drawing){var e=this.state.canvas.getBoundingClientRect(),s=this.state.lastX,n=this.state.lastY,a=void 0,o=void 0;this.isMobile()?(a=t.targetTouches[0].pageX-e.left,o=t.targetTouches[0].pageY-e.top):(a=t.clientX-e.left,o=t.clientY-e.top),this.draw(s,n,a,o),this.setState({lastX:a,lastY:o})}},handleonMouseUp:function(){this.setState({drawing:!1})},draw:function(t,e,s,n){this.state.context.strokeStyle=this.props.brushColor,this.state.context.lineWidth=this.props.lineWidth,this.state.context.moveTo(t,e),this.state.context.lineTo(s,n),this.state.context.stroke()},resetCanvas:function(){var t=this.state.context.canvas.width,e=this.state.context.canvas.height;this.state.context.clearRect(0,0,t,e)},getDefaultStyle:function(){return{backgroundColor:"#FFFFFF",cursor:"pointer"}},canvasStyle:function(){var t=this.getDefaultStyle(),e=this.props.canvasStyle;return Object.assign({},t,e)},isMobile:function(){return!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},render:function(){return React.createElement("canvas",{style:this.canvasStyle(),onMouseDown:this.handleOnMouseDown,onTouchStart:this.handleOnMouseDown,onMouseMove:this.handleOnMouseMove,onTouchMove:this.handleOnMouseMove,onMouseUp:this.handleonMouseUp,onTouchEnd:this.handleonMouseUp})}});module.exports=DrawableCanvas;